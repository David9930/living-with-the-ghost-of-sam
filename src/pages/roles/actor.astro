---
import Layout from '../../layouts/Layout.astro';
const base = import.meta.env.BASE_URL;
---

<Layout title="For Actors">
    <main>
        <div class="hero">
            <h1>For Actors: Groundbreaking Roles at the Intersection of Comedy and Technology</h1>
            <p class="subtitle">Join a series that offers unprecedented creative challenges and character development opportunities</p>
        </div>

        <section class="content">
            <div class="info-card vision">
                <h2>The Performance Opportunity</h2>
                <p>"Living with the Ghost of Sam" presents actors with rare character journeys that traverse both emotional authenticity and meta-theatrical playfulness. This series isn't just about portraying charactersâ€”it's about exploring the very nature of performance itself, the legacy of comedy, and the mysterious space where technology meets humanity's need to create and connect.</p>
            </div>

            <div class="info-card characters">
                <h2>Principal Character Breakdown</h2>
                
                <div class="character-card">
                    <h3>Derek Kinison (Lead, Male, 30s)</h3>
                    <p>A corporate executive who experiences a complete spiritual awakening after channeling his late cousin's comedic energy. Derek's journey from buttoned-up professional to reluctant guardian of comedy's legacy requires an actor who can balance dramatic transformation with subtle comedy. The role demands equal parts vulnerability and strength as Derek navigates supernatural occurrences while rebuilding his identity.</p>
                </div>

                <div class="character-card">
                    <h3>Nancy Hammond (Lead, Female, 30s)</h3>
                    <p>An art gallery owner whose pragmatic worldview is challenged by increasingly undeniable supernatural events. Nancy's character represents the audience's grounding point while undertaking her own journey from skeptic to believer. This role offers rich opportunities to portray intelligence, artistic sensibility, and the complexity of accepting a reality that defies explanation.</p>
                </div>

                <div class="character-card">
                    <h3>Smithers (Supporting, Male, 50-70s)</h3>
                    <p>The mansion's enigmatic caretaker who knows far more than he initially reveals. This character gradually unveils layers of wisdom, otherworldly knowledge, and unexpected abilities. For a veteran character actor, Smithers offers a masterclass in slow-burn character revelation and the chance to deliver both deadpan humor and profound insights.</p>
                </div>

                <div class="character-card">
                    <h3>Rebecca Blackwood (Antagonist, Female, 40-50s)</h3>
                    <p>A mysterious realtor with hidden connections to the mansion's history and technology, masquerading as Linda Rhodes. Rebecca's complex motivations and calculated manipulations make her far more than a typical villain. The role demands an actress who can project warmth and trustworthiness while concealing darker intentions.</p>
                </div>

                <div class="character-card">
                    <h3>Charles Weber (Supporting, Male, 40-50s)</h3>
                    <p>Derek's mentor and CEO whose corporate worldview is increasingly challenged. Charles undergoes his own parallel journey of self-discovery and spiritual awakening, eventually becoming both ally and foil. This role offers opportunities for both comedic moments and profound character evolution.</p>
                </div>
            </div>

            <div class="info-card unique-challenges">
                <h2>Unprecedented Performance Challenges</h2>
                <div class="two-column">
                    <div>
                        <h3>For Living Characters:</h3>
                        <ul>
                            <li>Interact with digital recreations of comedy legends</li>
                            <li>Navigate scenes that blend reality with supernatural elements</li>
                            <li>Portray authentic reactions to impossible situations</li>
                            <li>Balance dramatic moments with comedic timing</li>
                            <li>Develop characters who evolve through supernatural experiences</li>
                        </ul>
                    </div>
                    <div>
                        <h3>For Manifestations/AI Characters:</h3>
                        <ul>
                            <li>Embody legendary comedians' essences without mere imitation</li>
                            <li>Convey otherworldly knowledge with humanity</li>
                            <li>Perform in scenes requiring visual effects integration</li>
                            <li>Explore the boundary between person and program</li>
                            <li>Develop distinct personalities that transcend time</li>
                        </ul>
                    </div>
                </div>
            </div>

            <div class="info-card artistic-value">
                <h2>Artistic and Career Value</h2>
                <p>Beyond the creative challenges, "Living with the Ghost of Sam" offers significant career advantages:</p>
                <ul>
                    <li>Showcase versatility across comedy, drama, and supernatural genres</li>
                    <li>Develop skills working with cutting-edge visual effects and performance technology</li>
                    <li>Join a project with multi-season narrative potential and character development</li>
                    <li>Participate in a series exploring timely themes of digital identity and legacy</li>
                    <li>Connect with audiences across generations through nostalgic and contemporary elements</li>
                    <li>Potential for award recognition in an innovative concept-driven series</li>
                </ul>
            </div>

            <div class="info-card performance-approach">
                <h2>Our Performance Philosophy</h2>
                <p>We believe exceptional performances emerge from collaborative environments where actors are true creative partners:</p>
                <ul>
                    <li>Character backgrounds and motivations fully developed in the series bible</li>
                    <li>Meaningful collaboration between actors, writers and directors</li>
                    <li>Space for improvisation and character discovery within established structure</li>
                    <li>Technical support for scenes requiring VFX or unique staging elements</li>
                    <li>Commitment to psychological truth even within supernatural framework</li>
                    <li>Balance between honoring comedy history and creating something entirely new</li>
                </ul>
            </div>

            <div class="info-card guest-roles">
                <h2>Guest Star and Recurring Opportunities</h2>
                <p>Beyond the core cast, "Living with the Ghost of Sam" offers exceptional guest roles including:</p>
                <div class="role-grid">
                    <div class="role-card">
                        <h3>Comedy Legend Manifestations</h3>
                        <p>Opportunities for actors to portray digital consciousnesses of famous comedians, requiring both homage and originality.</p>
                    </div>
                    <div class="role-card">
                        <h3>Town Council Members</h3>
                        <p>Colorful local characters with quirky personalities who guard Oceanview's secrets while providing both comic relief and narrative tension.</p>
                    </div>
                    <div class="role-card">
                        <h3>Blackwood Family Members</h3>
                        <p>Mysterious figures with connections to the mansion's technology and darker purposes who appear throughout the season.</p>
                    </div>
                    <div class="role-card">
                        <h3>Digital Children</h3>
                        <p>Various digital consciousness entities with distinct personalities who inhabit the mansion's systems and assist or challenge the Kinisons.</p>
                    </div>
                </div>
            </div>

            <div class="info-card materials">
                <h2>Available Materials</h2>
                <div class="materials-grid">
                    <a href={`${base}scripts`} class="material-link">
                        <div class="material-card">
                            <h3>Sample Sides</h3>
                            <p>Key character scenes for audition preparation</p>
                        </div>
                    </a>
                    <a href={`${base}character-bios`} class="material-link">
                        <div class="material-card">
                            <h3>Character Bios</h3>
                            <p>Detailed character backgrounds and arcs</p>
                        </div>
                    </a>
                    <a href={`${base}visuals`} class="material-link">
                        <div class="material-card">
                            <h3>Visual References</h3>
                            <p>Concept art and scene visualizations</p>
                        </div>
                    </a>
                    <a href={`${base}world`} class="material-link">
                        <div class="material-card">
                            <h3>World Context</h3>
                            <p>The rules and mythology of the series</p>
                        </div>
                    </a>
                </div>
            </div>

            <div class="info-card contact" id="contact-section">
                <h2>Join Us in Reshaping Entertainment's Future</h2>
                <p>Interested in bringing these extraordinary characters to life? Submit your contact information below:</p>
                
                <div class="contact-forms">
                    <div class="contact-form-container">
                        <h3>Casting Inquiries</h3>
                        <form class="contact-form" id="casting-form">
                            <input type="email" placeholder="Your email address" required>
                            <button type="submit" class="contact-btn" data-category="Casting Inquiry">Submit</button>
                            <p class="form-message"></p>
                        </form>
                    </div>
                    
                    <div class="contact-form-container">
                        <h3>Agent/Representation Inquiries</h3>
                        <form class="contact-form" id="agent-form">
                            <input type="email" placeholder="Your email address" required>
                            <button type="submit" class="contact-btn" data-category="Agent/Representation">Submit</button>
                            <p class="form-message"></p>
                        </form>
                    </div>
                </div>
            </div>
        </section>
    </main>
</Layout>

<style>
    main {
        color: white;
    }

    .hero {
        background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url('/living-with-the-ghost-of-sam/images/SamImage.jpg') no-repeat center center;
        background-size: cover;
        padding: 4rem 2rem;
        text-align: center;
    }

    .hero h1 {
        font-size: 2.5rem;
        margin: 0;
        margin-bottom: 1rem;
        max-width: 800px;
        margin-left: auto;
        margin-right: auto;
    }

    .subtitle {
        font-size: 1.5rem;
        opacity: 0.9;
        max-width: 600px;
        margin-left: auto;
        margin-right: auto;
    }

    .content {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
    }

    .info-card {
        background: rgba(255, 255, 255, 0.1);
        border-radius: 8px;
        padding: 2rem;
        margin-bottom: 2rem;
    }

    .info-card h2 {
        color: #FFD700;
        margin-top: 0;
        margin-bottom: 1rem;
    }

    .info-card h3 {
        color: #FFD700;
        margin-top: 1.5rem;
        margin-bottom: 0.75rem;
    }

    .info-card ul {
        padding-left: 1.5rem;
        line-height: 1.6;
    }

    .info-card li {
        margin-bottom: 0.75rem;
    }

    .character-card {
        background: rgba(255, 255, 255, 0.05);
        padding: 1.5rem;
        border-radius: 6px;
        margin-bottom: 1.5rem;
    }

    .character-card h3 {
        margin-top: 0;
        margin-bottom: 0.75rem;
    }

    .character-card p {
        margin: 0;
        line-height: 1.6;
    }

    .two-column {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
    }

    .role-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
        margin-top: 1.5rem;
    }

    .role-card {
        background: rgba(255, 255, 255, 0.05);
        padding: 1.5rem;
        border-radius: 6px;
        height: 100%;
    }

    .role-card h3 {
        margin-top: 0;
    }

    .materials-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
        margin-top: 1.5rem;
    }

    .material-link {
        text-decoration: none;
        color: inherit;
    }

    .material-card {
        background: rgba(255, 255, 255, 0.05);
        padding: 1.5rem;
        border-radius: 6px;
        transition: transform 0.2s, background-color 0.2s;
    }

    .material-card:hover {
        transform: translateY(-5px);
        background: rgba(255, 255, 255, 0.1);
    }
    
    /* Contact form styles */
    .contact-forms {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
        margin-top: 2rem;
    }
    
    .contact-form-container {
        background: rgba(255, 255, 255, 0.05);
        padding: 1.5rem;
        border-radius: 6px;
    }
    
    .contact-form-container h3 {
        margin-top: 0;
        margin-bottom: 1rem;
    }
    
    .contact-form {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }
    
    .contact-form input {
        padding: 0.75rem 1rem;
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 4px;
        color: white;
        font-size: 1rem;
    }
    
    .contact-form button {
        cursor: pointer;
    }
    
    .form-message {
        font-size: 0.9rem;
        height: 20px;
        margin: 0;
    }
    
    /* Contact button styles */
    .contact-btn {
        display: inline-block;
        background: #2196F3;
        color: white;
        padding: 0.75rem 1.5rem;
        border-radius: 4px;
        text-decoration: none;
        transition: background-color 0.2s;
        border: none;
        font-size: 1rem;
        font-weight: 500;
        cursor: pointer;
    }

    .contact-btn:hover {
        background: #1976D2;
    }

    @media (max-width: 768px) {
        .hero h1 {
            font-size: 2rem;
        }

        .subtitle {
            font-size: 1.2rem;
        }

        .content {
            padding: 1rem;
        }

        .two-column, .role-grid {
            grid-template-columns: 1fr;
        }

        .materials-grid, .contact-forms {
            grid-template-columns: 1fr;
        }
    }
</style>

<script>
    // Add email submission tracking
    document.addEventListener('DOMContentLoaded', function() {
        const contactForms = document.querySelectorAll('.contact-form');
        
        contactForms.forEach(form => {
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const emailInput = this.querySelector('input[type="email"]');
                const email = emailInput.value;
                const category = this.querySelector('button').getAttribute('data-category');
                const message = this.querySelector('.form-message');
                
                // Skip tracking if in admin mode
                if (localStorage.getItem('trackingDisabled') === 'true') {
                    message.textContent = "Your information has been submitted!";
                    message.style.color = "#4CAF50";
                    form.reset();
                    
                    setTimeout(() => {
                        message.textContent = "";
                    }, 5000);
                    return;
                }
                
                // Get session data if available
                let sessionId = 'Unknown';
                try {
                    const sessionData = JSON.parse(sessionStorage.getItem('sessionTracking') || '{}');
                    sessionId = sessionData.sessionId || 'Unknown';
                } catch (error) {
                    console.error("Error getting session data:", error);
                }
                
                // Directly send EmailJS using multiple possible parameter formats
                if (typeof emailjs !== 'undefined') {
                    // Create message content
                    const messageContent = `
Actor Contact Request:
- Email: ${email}
- Category: ${category}
- Page: ${window.location.pathname}
- Session ID: ${sessionId}
- Time: ${new Date().toISOString()}
                    `;
                    
                    // Include all possible parameter names the template might expect
                    const params = {
                        to_email: 'dburnham9930@gmail.com',
                        from_name: `Actor Contact - ${category}`,
                        from_email: email,
                        subject: `Actor Contact - ${category}`,
                        message: messageContent,
                        content: messageContent,
                        name: `Actor Contact - ${category}`,
                        email: email,
                        category: category,
                        page: window.location.pathname,
                        user_email: email,
                        reply_to: email
                    };
                    
                    // Send using EmailJS
                    emailjs.send('service_mglwuwe', 'template_6cjvb36', params)
                        .then(function() {
                            console.log("Form submission sent successfully");
                            showSuccess();
                        }, function(error) {
                            console.error("EmailJS send failed:", error);
                            
                            // Try trackContactRequest as fallback
                            if (typeof window.trackContactRequest === 'function') {
                                console.log("Trying trackContactRequest as fallback");
                                window.trackContactRequest(email, category, sessionId);
                                showSuccess();
                            } else {
                                showError();
                            }
                        });
                } else if (typeof window.trackContactRequest === 'function') {
                    // Fall back to trackContactRequest if EmailJS not available
                    window.trackContactRequest(email, category, sessionId);
                    showSuccess();
                } else {
                    showError();
                }
                
                // Helper function to show success message
                function showSuccess() {
                    message.textContent = "Your information has been submitted!";
                    message.style.color = "#4CAF50";
                    form.reset();
                    
                    // Clear the message after a few seconds
                    setTimeout(() => {
                        message.textContent = "";
                    }, 5000);
                }
                
                // Helper function to show error message
                function showError() {
                    console.error("All submission methods failed");
                    message.textContent = "There was a problem submitting your request. Please try again.";
                    message.style.color = "#FF5252";
                }
            });
        });
    });
</script>
