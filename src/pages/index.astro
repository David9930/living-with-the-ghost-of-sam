---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Living with the Ghost of Sam">
    <div id="splash" class="splash-container" data-astro-cid-j7pv25f6>
        <div class="login-box" data-astro-cid-j7pv25f6>
            <h1>Welcome</h1>
            <div class="password-input" data-astro-cid-j7pv25f6>
                <label for="password" data-astro-cid-j7pv25f6>Professor Who ?</label>
                <input type="password" id="password" data-astro-cid-j7pv25f6>
            </div>
            <button id="submit-btn" class="btn" data-astro-cid-j7pv25f6>Enter</button>
            <p id="error-message" class="error" data-astro-cid-j7pv25f6></p>
        </div>
        <div id="image-box" data-astro-cid-j7pv25f6>
            <img src="/images/SamImagesmall.jpg" 
                 id="sam-image" 
                 alt="Sam" 
                 data-astro-cid-j7pv25f6>
        </div>
    </div>

    <main id="content" class="hidden" data-astro-cid-j7pv25f6>
        <h1>Living with the Ghost of Sam</h1>
        <div class="grid" data-astro-cid-j7pv25f6>
            <a href="/scripts" class="card" data-astro-cid-j7pv25f6>
                <h2>Scripts</h2>
                <p>Access all TV show scripts in PDF format</p>
            </a>
            <a href="/documents" class="card" data-astro-cid-j7pv25f6>
                <h2>Show Documents</h2>
                <p>Review evaluation materials and show proposals</p>
            </a>
            <a href="/bible" class="card" data-astro-cid-j7pv25f6>
                <h2>Character Bible</h2>
                <p>Detailed character profiles and relationships</p>
            </a>
            <a href="/sam" class="card ghost-card" data-astro-cid-j7pv25f6>
                <h2>Sam's Corner</h2>
                <p>Watch exclusive clips featuring Sam</p>
            </a>
            <a href="/about" class="card" data-astro-cid-j7pv25f6>
                <h2>About the Writer</h2>
                <p>Writer biography and background</p>
            </a>
        </div>
    </main>
</Layout>

<style>
    .splash-container[data-astro-cid-j7pv25f6] {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: #13151a;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
        overflow: hidden;
    }

    .login-box[data-astro-cid-j7pv25f6] {
        background: rgba(255, 255, 255, 0.1);
        padding: 2rem;
        border-radius: 8px;
        text-align: center;
        color: white;
        z-index: 1001;
        position: relative;
    }

    .password-input[data-astro-cid-j7pv25f6] {
        margin: 1rem 0;
    }

    .password-input[data-astro-cid-j7pv25f6] label[data-astro-cid-j7pv25f6] {
        display: block;
        margin-bottom: 0.5rem;
    }

    .password-input[data-astro-cid-j7pv25f6] input[data-astro-cid-j7pv25f6] {
    padding: 0.5rem;
    border-radius: 4px;
    border: none;
    width: 100%;
    color: white !important;
}

    .btn[data-astro-cid-j7pv25f6] {
        display: inline-block;
        color: white;
        padding: 0.75rem 1.5rem;
        border-radius: 4px;
        text-decoration: none;
        border: none;
        cursor: pointer;
        font-size: 1rem;
        transition: background 0.2s;
        background: #2196F3;
    }

    .btn[data-astro-cid-j7pv25f6]:hover {
        background: #1976D2;
    }

    .error[data-astro-cid-j7pv25f6] {
        color: red;
        margin-top: 1rem;
    }

    .hidden[data-astro-cid-j7pv25f6] {
        display: none;
    }

    .grid[data-astro-cid-j7pv25f6] {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        margin-top: 2rem;
    }

    .card[data-astro-cid-j7pv25f6] {
        background: rgba(255, 255, 255, 0.1);
        padding: 1rem;
        border-radius: 8px;
        text-align: center;
        color: white;
        text-decoration: none;
        transition: transform 0.2s;
    }

    .card[data-astro-cid-j7pv25f6]:hover {
        transform: translateY(-5px);
    }

    .ghost-card[data-astro-cid-j7pv25f6] {
        border: 2px dashed #FFD700;
    }

    #image-box[data-astro-cid-j7pv25f6] {
        position: absolute;
        width: 300px;
        height: 200px;
        transition: transform 0.5s ease-in-out;
        background: rgba(255, 255, 255, 0.1);
        pointer-events: none;
        z-index: 1000;
    }

    #sam-image[data-astro-cid-j7pv25f6] {
        width: 100%;
        height: 100%;
        object-fit: cover;
        display: block;
        opacity: 1;
        visibility: visible;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Enhanced authentication check
        if (sessionStorage.getItem('authenticated')) {
            const splash = document.getElementById('splash');
            const content = document.getElementById('content');
            if (splash && content) {
                splash.classList.add('hidden');
                content.classList.remove('hidden');
            }
        }

        // Password validation
        function checkPassword() {
            const password = document.getElementById('password').value;
            if (password === 'Terguson') {
                sessionStorage.setItem('authenticated', 'true');
                // Show content on same page instead of redirecting
                document.getElementById('splash').classList.add('hidden');
                document.getElementById('content').classList.remove('hidden');
            } else {
                document.getElementById('error-message').textContent = 'Incorrect password';
            }
        }
        
        // Event listeners for password submission
        document.getElementById('submit-btn').addEventListener('click', checkPassword);
        document.getElementById('password').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                checkPassword();
            }
        });

        // Enhanced image movement functionality
        const imageBox = document.getElementById('image-box');
        const samImage = document.getElementById('sam-image');

        function randomPosition() {
            const viewportWidth = Math.max(window.innerWidth, 320);
            const viewportHeight = Math.max(window.innerHeight, 240);
            
            const boxWidth = imageBox.offsetWidth;
            const boxHeight = imageBox.offsetHeight;
            
            const maxX = viewportWidth - boxWidth;
            const maxY = viewportHeight - boxHeight;
            
            const x = Math.max(0, Math.min(Math.floor(Math.random() * maxX), maxX));
            const y = Math.max(0, Math.min(Math.floor(Math.random() * maxY), maxY));
            
            return { x, y };
        }

        function moveImageBox() {
            const { x, y } = randomPosition();
            imageBox.style.transform = `translate3d(${x}px, ${y}px, 0)`;
            imageBox.style.webkitTransform = `translate3d(${x}px, ${y}px, 0)`;
        }

        // Initialize movement with requestAnimationFrame
        requestAnimationFrame(() => {
            moveImageBox();
            setInterval(moveImageBox, 3000);
        });

        // Handle window resizing
        window.addEventListener('resize', moveImageBox);

        // Image loading debug
        samImage.addEventListener('load', function() {
            console.log('Image loaded successfully');
            console.log('Image dimensions:', this.naturalWidth, 'x', this.naturalHeight);
        });

        samImage.addEventListener('error', function() {
            console.log('Failed to load image');
            console.log('Attempted image path:', this.src);
        });
        
        // Visitor notification function with better error handling
        // Only notify for new sessions to avoid multiple notifications from the same visitor
        if (!sessionStorage.getItem('visit_notified')) {
            // Wait a moment to ensure EmailJS is fully loaded
            setTimeout(function() {
                notifyVisit();
            }, 1000);
        }
        
        // Separate function for notification with detailed error handling
        function notifyVisit() {
            console.log("Attempting to send visit notification...");
            
            // Verify EmailJS is loaded
            if (typeof emailjs === 'undefined') {
                console.error("EmailJS is not loaded properly");
                return;
            }
            
            try {
                // Create a timestamp for the visit
                const visitTime = new Date().toISOString();
                const params = {
                    to_email: 'dburnham9930@gmail.com',
                    subject: 'New Visitor to Living with the Ghost of Sam',
                    message: `Someone visited your website at ${visitTime}.`
                };
                
                console.log("Sending notification with params:", params);
                
                // Use EmailJS service to send the notification
                emailjs.send(
                    'YOUR_SERVICE_ID', // Replace with your actual EmailJS service ID
                    'YOUR_TEMPLATE_ID', // Replace with your actual EmailJS template ID
                    params
                ).then(
                    function(response) {
                        console.log('Notification sent successfully!', response);
                        // Mark this session as notified
                        sessionStorage.setItem('visit_notified', 'true');
                    }, 
                    function(error) {
                        console.error('Notification failed!', error);
                        // Try to get more details about the failure
                        if (error.text) {
                            console.error('Error details:', error.text);
                        }
                    }
                );
            } catch (error) {
                console.error('Error in notifyVisit function:', error);
            }
        }
    });
</script>
